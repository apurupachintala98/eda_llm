{"ast":null,"code":"var _jsxFileName = \"/Users/apurupachintala/Documents/GitHub/eda_llm/src/components/Home.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import { styled } from '@mui/system';\n// import {\n//     AppBar,\n//     Toolbar,\n//     Typography,\n//     MenuItem,\n//     FormControl,\n//     InputLabel,\n//     Select,\n//     Box,\n//     TextField,\n//     Button,\n//     Paper\n// } from \"@mui/material\";\n// import { getPlatforms, getModelsByPlatform } from \"../services/apiService\";\n// import LLM_Image from '../assests/images/LLM.png';\n\n// const Banner = styled(Box)({\n//     height: '650px',\n//     backgroundImage: `url(${LLM_Image})`,\n//     backgroundSize: 'cover',\n//     backgroundPosition: 'center',\n// });\n\n// const Home = () => {\n//     const [platforms, setPlatforms] = useState([]);\n//     const [models, setModels] = useState([]);\n//     const [selectedPlatform, setSelectedPlatform] = useState(\"\");\n//     const [selectedModel, setSelectedModel] = useState(\"\");\n//     const [prompt, setPrompt] = useState(\"\");\n\n//     useEffect(() => {\n//         const fetchPlatforms = async () => {\n//             try {\n//                 const data = await getPlatforms();\n//                 setPlatforms(data);\n//             } catch (error) {\n//                 console.error(\"Error fetching platforms:\", error);\n//             }\n//         };\n//         fetchPlatforms();\n//     }, []);\n\n//     const handlePlatformChange = async (event) => {\n//         const platform = event.target.value;\n//         setSelectedPlatform(platform);\n//         try {\n//             const modelsData = await getModelsByPlatform(platform);\n//             setModels(modelsData);\n//             setSelectedModel(\"\");\n//         } catch (error) {\n//             console.error(\"Error fetching models:\", error);\n//         }\n//     };\n\n//     const handleModelChange = (event) => {\n//         setSelectedModel(event.target.value);\n//     };\n\n//     return (\n//         <div>\n//             {/* Header */}\n//             <AppBar position=\"static\" sx={{ backgroundColor: \"#fff\" }}>\n//                 <Toolbar>\n//                     <Typography variant=\"h6\" sx={{ color: \"#6c5ce7\", fontWeight: \"bold\" }}>\n//                         EDA LLM GW\n//                     </Typography>\n//                 </Toolbar>\n//             </AppBar>\n\n//             {/* Banner */}\n//             <Banner />\n\n//             {/* Platform Selection */}\n//             <Box\n//                 sx={{\n//                     display: 'flex',\n//                     flexDirection: 'column',\n//                     alignItems: 'center',\n//                     justifyContent: 'center',\n//                     mt: 4\n//                 }}\n//             >\n//             <Typography variant=\"h5\" gutterBottom sx={{alignItems: 'left', fontWeight: 'bold', fontFamily: 'Roboto, sans-serif', fontSize:\"20px\", color: \"#6c5ce7\" }}>\n//                     Choose LLM Platform\n//                 </Typography>\n//                 <FormControl sx={{ width: 300 }}>\n//                     <InputLabel id=\"platform-select-label\">Choose LLM Platform</InputLabel>\n//                     <Select\n//                         labelId=\"platform-select-label\"\n//                         value={selectedPlatform}\n//                         onChange={handlePlatformChange}\n//                     >\n//                         {platforms.map((platform) => (\n//                             <MenuItem key={platform} value={platform}>\n//                                 {platform}\n//                             </MenuItem>\n//                         ))}\n//                     </Select>\n//                 </FormControl>\n//             </Box>\n\n//             {/* Conditional Dropdowns and Input */}\n//             {selectedPlatform && (\n//                 <Paper elevation={3} sx={{ padding: 4, mt: 4, mx: \"auto\", maxWidth: 600 }}>\n//                     {/* Select Model */}\n//                     <Typography variant=\"h6\" mb={2} sx={{ fontWeight: \"bold\", color: \"#6c5ce7\" }}>\n//                         Ask using Snowflake Cortex\n//                     </Typography>\n\n//                     {/* Model Selection */}\n//                     <FormControl fullWidth margin=\"normal\">\n//                         <InputLabel id=\"model-select-label\">Select your model</InputLabel>\n//                         <Select\n//                             labelId=\"model-select-label\"\n//                             value={selectedModel}\n//                             onChange={handleModelChange}\n//                         >\n//                             {models.map((model) => (\n//                                 <MenuItem key={model} value={model}>{model}</MenuItem>\n//                             ))}\n//                         </Select>\n//                     </FormControl>\n\n//                     {/* Prompt Input */}\n//                     <TextField\n//                         label=\"Provide Prompt\"\n//                         fullWidth\n//                         margin=\"normal\"\n//                         variant=\"outlined\"\n//                         value={prompt}\n//                         onChange={(e) => setPrompt(e.target.value)}\n//                     />\n\n//                     {/* Submit Button */}\n//                     <Typography variant=\"body1\" sx={{ mt: 2 }}>\n//                         Selected model: {selectedModel || \"None\"}\n//                     </Typography>\n//                     <Typography variant=\"body1\" sx={{ mb: 2 }}>\n//                         Requested Prompt:\n//                     </Typography>\n//                     <Button variant=\"contained\" sx={{ backgroundColor: \"#6c5ce7\" }}>\n//                         Submit\n//                     </Button>\n//                 </Paper>\n//             )}\n//         </div>\n//     );\n// };\n\n// export default Home;\n\nimport React, { useEffect, useState } from \"react\";\nimport { styled } from '@mui/system';\nimport { AppBar, Toolbar, Typography, MenuItem, FormControl, InputLabel, Select, Box, TextField, Button, Paper } from \"@mui/material\";\nimport axios from \"axios\";\nimport { getPlatforms, getModelsByPlatform } from \"../services/apiService\";\nimport LLM_Image from '../assests/images/LLM.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"http://10.126.192.122:8000\";\nconst Banner = styled(Box)({\n  height: '650px',\n  backgroundImage: `url(${LLM_Image})`,\n  backgroundSize: 'cover',\n  backgroundPosition: 'center'\n});\n_c = Banner;\nconst Home = () => {\n  _s();\n  const [platforms, setPlatforms] = useState([]);\n  const [models, setModels] = useState([]);\n  const [selectedPlatform, setSelectedPlatform] = useState(\"\");\n  const [selectedModel, setSelectedModel] = useState(\"\");\n  const [prompt, setPrompt] = useState(\"\");\n  const [responsePrompt, setResponsePrompt] = useState(\"\");\n  useEffect(() => {\n    const fetchPlatforms = async () => {\n      try {\n        const data = await getPlatforms();\n        setPlatforms(data);\n      } catch (error) {\n        console.error(\"Error fetching platforms:\", error);\n      }\n    };\n    fetchPlatforms();\n  }, []);\n  const handlePlatformChange = async event => {\n    const platform = event.target.value;\n    setSelectedPlatform(platform);\n    try {\n      const modelsData = await getModelsByPlatform(platform);\n      setModels(modelsData);\n      setSelectedModel(\"\");\n    } catch (error) {\n      console.error(\"Error fetching models:\", error);\n    }\n  };\n  const handleModelChange = event => {\n    setSelectedModel(event.target.value);\n  };\n  const handleSubmit = async () => {\n    const payload = {\n      method: selectedPlatform,\n      // Take method value from the selected platform\n      model: selectedModel,\n      context: \"You are powerful AI assistant in providing accurate answers always. Be Concise in providing answers based on context.\",\n      prompt: prompt\n    };\n    try {\n      const response = await axios.post(`${BASE_URL}/get_llm_response/`, payload);\n      setResponsePrompt(prompt);\n      console.log(\"Response:\", response.data);\n    } catch (error) {\n      console.error(\"Error sending request:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      sx: {\n        backgroundColor: \"#fff\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            color: \"#6c5ce7\",\n            fontWeight: \"bold\"\n          },\n          children: \"EDA LLM GW\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Banner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        mt: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        sx: {\n          alignItems: 'left',\n          fontWeight: 'bold',\n          fontFamily: 'Roboto, sans-serif',\n          fontSize: \"20px\",\n          color: \"#6c5ce7\"\n        },\n        children: \"Choose LLM Platform\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        sx: {\n          width: 300\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"platform-select-label\",\n          children: \"Choose LLM Platform\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"platform-select-label\",\n          value: selectedPlatform,\n          onChange: handlePlatformChange,\n          children: platforms.map(platform => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: platform,\n            children: platform\n          }, platform, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }, this), selectedPlatform && /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        padding: 4,\n        mt: 4,\n        mx: \"auto\",\n        maxWidth: 600\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        mb: 2,\n        sx: {\n          fontWeight: \"bold\",\n          color: \"#6c5ce7\"\n        },\n        children: \"Ask using Snowflake Cortex\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        margin: \"normal\",\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"model-select-label\",\n          children: \"Select your model\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"model-select-label\",\n          value: selectedModel,\n          onChange: handleModelChange,\n          children: models.map(model => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: model,\n            children: model\n          }, model, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Provide Prompt\",\n        fullWidth: true,\n        margin: \"normal\",\n        variant: \"outlined\",\n        value: prompt,\n        onChange: e => setPrompt(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        sx: {\n          mt: 2\n        },\n        children: [\"Selected model: \", selectedModel || \"None\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 1\n      }, this), responsePrompt && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          sx: {\n            fontWeight: \"bold\"\n          },\n          children: \"Requested Prompt:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: responsePrompt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        sx: {\n          backgroundColor: \"#6c5ce7\",\n          mt: 2\n        },\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"Ymy+GBij403dmjSOjhvDTc6Ic9o=\");\n_c2 = Home;\nexport default Home;\nvar _c, _c2;\n$RefreshReg$(_c, \"Banner\");\n$RefreshReg$(_c2, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","styled","AppBar","Toolbar","Typography","MenuItem","FormControl","InputLabel","Select","Box","TextField","Button","Paper","axios","getPlatforms","getModelsByPlatform","LLM_Image","jsxDEV","_jsxDEV","BASE_URL","Banner","height","backgroundImage","backgroundSize","backgroundPosition","_c","Home","_s","platforms","setPlatforms","models","setModels","selectedPlatform","setSelectedPlatform","selectedModel","setSelectedModel","prompt","setPrompt","responsePrompt","setResponsePrompt","fetchPlatforms","data","error","console","handlePlatformChange","event","platform","target","value","modelsData","handleModelChange","handleSubmit","payload","method","model","context","response","post","log","children","position","sx","backgroundColor","variant","color","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","display","flexDirection","alignItems","justifyContent","mt","gutterBottom","fontFamily","fontSize","width","id","labelId","onChange","map","elevation","padding","mx","maxWidth","mb","fullWidth","margin","label","e","onClick","_c2","$RefreshReg$"],"sources":["/Users/apurupachintala/Documents/GitHub/eda_llm/src/components/Home.jsx"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\n// import { styled } from '@mui/system';\n// import {\n//     AppBar,\n//     Toolbar,\n//     Typography,\n//     MenuItem,\n//     FormControl,\n//     InputLabel,\n//     Select,\n//     Box,\n//     TextField,\n//     Button,\n//     Paper\n// } from \"@mui/material\";\n// import { getPlatforms, getModelsByPlatform } from \"../services/apiService\";\n// import LLM_Image from '../assests/images/LLM.png';\n\n// const Banner = styled(Box)({\n//     height: '650px',\n//     backgroundImage: `url(${LLM_Image})`,\n//     backgroundSize: 'cover',\n//     backgroundPosition: 'center',\n// });\n\n// const Home = () => {\n//     const [platforms, setPlatforms] = useState([]);\n//     const [models, setModels] = useState([]);\n//     const [selectedPlatform, setSelectedPlatform] = useState(\"\");\n//     const [selectedModel, setSelectedModel] = useState(\"\");\n//     const [prompt, setPrompt] = useState(\"\");\n\n//     useEffect(() => {\n//         const fetchPlatforms = async () => {\n//             try {\n//                 const data = await getPlatforms();\n//                 setPlatforms(data);\n//             } catch (error) {\n//                 console.error(\"Error fetching platforms:\", error);\n//             }\n//         };\n//         fetchPlatforms();\n//     }, []);\n\n//     const handlePlatformChange = async (event) => {\n//         const platform = event.target.value;\n//         setSelectedPlatform(platform);\n//         try {\n//             const modelsData = await getModelsByPlatform(platform);\n//             setModels(modelsData);\n//             setSelectedModel(\"\");\n//         } catch (error) {\n//             console.error(\"Error fetching models:\", error);\n//         }\n//     };\n\n//     const handleModelChange = (event) => {\n//         setSelectedModel(event.target.value);\n//     };\n\n//     return (\n//         <div>\n//             {/* Header */}\n//             <AppBar position=\"static\" sx={{ backgroundColor: \"#fff\" }}>\n//                 <Toolbar>\n//                     <Typography variant=\"h6\" sx={{ color: \"#6c5ce7\", fontWeight: \"bold\" }}>\n//                         EDA LLM GW\n//                     </Typography>\n//                 </Toolbar>\n//             </AppBar>\n\n//             {/* Banner */}\n//             <Banner />\n\n//             {/* Platform Selection */}\n//             <Box\n//                 sx={{\n//                     display: 'flex',\n//                     flexDirection: 'column',\n//                     alignItems: 'center',\n//                     justifyContent: 'center',\n//                     mt: 4\n//                 }}\n//             >\n//             <Typography variant=\"h5\" gutterBottom sx={{alignItems: 'left', fontWeight: 'bold', fontFamily: 'Roboto, sans-serif', fontSize:\"20px\", color: \"#6c5ce7\" }}>\n//                     Choose LLM Platform\n//                 </Typography>\n//                 <FormControl sx={{ width: 300 }}>\n//                     <InputLabel id=\"platform-select-label\">Choose LLM Platform</InputLabel>\n//                     <Select\n//                         labelId=\"platform-select-label\"\n//                         value={selectedPlatform}\n//                         onChange={handlePlatformChange}\n//                     >\n//                         {platforms.map((platform) => (\n//                             <MenuItem key={platform} value={platform}>\n//                                 {platform}\n//                             </MenuItem>\n//                         ))}\n//                     </Select>\n//                 </FormControl>\n//             </Box>\n\n//             {/* Conditional Dropdowns and Input */}\n//             {selectedPlatform && (\n//                 <Paper elevation={3} sx={{ padding: 4, mt: 4, mx: \"auto\", maxWidth: 600 }}>\n//                     {/* Select Model */}\n//                     <Typography variant=\"h6\" mb={2} sx={{ fontWeight: \"bold\", color: \"#6c5ce7\" }}>\n//                         Ask using Snowflake Cortex\n//                     </Typography>\n\n//                     {/* Model Selection */}\n//                     <FormControl fullWidth margin=\"normal\">\n//                         <InputLabel id=\"model-select-label\">Select your model</InputLabel>\n//                         <Select\n//                             labelId=\"model-select-label\"\n//                             value={selectedModel}\n//                             onChange={handleModelChange}\n//                         >\n//                             {models.map((model) => (\n//                                 <MenuItem key={model} value={model}>{model}</MenuItem>\n//                             ))}\n//                         </Select>\n//                     </FormControl>\n\n//                     {/* Prompt Input */}\n//                     <TextField\n//                         label=\"Provide Prompt\"\n//                         fullWidth\n//                         margin=\"normal\"\n//                         variant=\"outlined\"\n//                         value={prompt}\n//                         onChange={(e) => setPrompt(e.target.value)}\n//                     />\n\n//                     {/* Submit Button */}\n//                     <Typography variant=\"body1\" sx={{ mt: 2 }}>\n//                         Selected model: {selectedModel || \"None\"}\n//                     </Typography>\n//                     <Typography variant=\"body1\" sx={{ mb: 2 }}>\n//                         Requested Prompt:\n//                     </Typography>\n//                     <Button variant=\"contained\" sx={{ backgroundColor: \"#6c5ce7\" }}>\n//                         Submit\n//                     </Button>\n//                 </Paper>\n//             )}\n//         </div>\n//     );\n// };\n\n// export default Home;\n\n\nimport React, { useEffect, useState } from \"react\";\nimport { styled } from '@mui/system';\nimport {\n    AppBar,\n    Toolbar,\n    Typography,\n    MenuItem,\n    FormControl,\n    InputLabel,\n    Select,\n    Box,\n    TextField,\n    Button,\n    Paper\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { getPlatforms, getModelsByPlatform } from \"../services/apiService\";\nimport LLM_Image from '../assests/images/LLM.png';\n\nconst BASE_URL = \"http://10.126.192.122:8000\";\n\nconst Banner = styled(Box)({\n    height: '650px',\n    backgroundImage: `url(${LLM_Image})`,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n});\n\nconst Home = () => {\n    const [platforms, setPlatforms] = useState([]);\n    const [models, setModels] = useState([]);\n    const [selectedPlatform, setSelectedPlatform] = useState(\"\");\n    const [selectedModel, setSelectedModel] = useState(\"\");\n    const [prompt, setPrompt] = useState(\"\");\n    const [responsePrompt, setResponsePrompt] = useState(\"\");\n\n    useEffect(() => {\n        const fetchPlatforms = async () => {\n            try {\n                const data = await getPlatforms();\n                setPlatforms(data);\n            } catch (error) {\n                console.error(\"Error fetching platforms:\", error);\n            }\n        };\n        fetchPlatforms();\n    }, []);\n\n    const handlePlatformChange = async (event) => {\n        const platform = event.target.value;\n        setSelectedPlatform(platform);\n        try {\n            const modelsData = await getModelsByPlatform(platform);\n            setModels(modelsData);\n            setSelectedModel(\"\");\n        } catch (error) {\n            console.error(\"Error fetching models:\", error);\n        }\n    };\n\n    const handleModelChange = (event) => {\n        setSelectedModel(event.target.value);\n    };\n\n    const handleSubmit = async () => {\n        const payload = {\n            method: selectedPlatform, // Take method value from the selected platform\n            model: selectedModel,\n            context: \"You are powerful AI assistant in providing accurate answers always. Be Concise in providing answers based on context.\",\n            prompt: prompt,\n        };\n        try {\n            const response = await axios.post(`${BASE_URL}/get_llm_response/`, payload);\n            setResponsePrompt(prompt);\n            console.log(\"Response:\", response.data);\n        } catch (error) {\n            console.error(\"Error sending request:\", error);\n        }\n    };\n\n    return (\n        <div>\n            {/* Header */}\n            <AppBar position=\"static\" sx={{ backgroundColor: \"#fff\" }}>\n                <Toolbar>\n                    <Typography variant=\"h6\" sx={{ color: \"#6c5ce7\", fontWeight: \"bold\" }}>\n                        EDA LLM GW\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n\n            {/* Banner */}\n            <Banner />\n\n            {/* Platform Selection */}\n            <Box\n                sx={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    mt: 4\n                }}\n            >\n            <Typography variant=\"h5\" gutterBottom sx={{alignItems: 'left', fontWeight: 'bold', fontFamily: 'Roboto, sans-serif', fontSize:\"20px\", color: \"#6c5ce7\" }}>\n                    Choose LLM Platform\n                </Typography>\n                <FormControl sx={{ width: 300 }}>\n                    <InputLabel id=\"platform-select-label\">Choose LLM Platform</InputLabel>\n                    <Select\n                        labelId=\"platform-select-label\"\n                        value={selectedPlatform}\n                        onChange={handlePlatformChange}\n                    >\n                        {platforms.map((platform) => (\n                            <MenuItem key={platform} value={platform}>\n                                {platform}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n            </Box>\n\n            {/* Conditional Dropdowns and Input */}\n            {selectedPlatform && (\n                <Paper elevation={3} sx={{ padding: 4, mt: 4, mx: \"auto\", maxWidth: 600 }}>\n                    {/* Select Model */}\n                    <Typography variant=\"h6\" mb={2} sx={{ fontWeight: \"bold\", color: \"#6c5ce7\" }}>\n                        Ask using Snowflake Cortex\n                    </Typography>\n\n                    {/* Model Selection */}\n                    <FormControl fullWidth margin=\"normal\">\n                        <InputLabel id=\"model-select-label\">Select your model</InputLabel>\n                        <Select\n                            labelId=\"model-select-label\"\n                            value={selectedModel}\n                            onChange={handleModelChange}\n                        >\n                            {models.map((model) => (\n                                <MenuItem key={model} value={model}>{model}</MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n\n                    {/* Prompt Input */}\n                    <TextField\n                        label=\"Provide Prompt\"\n                        fullWidth\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        value={prompt}\n                        onChange={(e) => setPrompt(e.target.value)}\n                    />\n\n<Typography variant=\"body1\" sx={{ mt: 2 }}>\n                       Selected model: {selectedModel || \"None\"}\n                 </Typography>\n                    {/* Display Requested Prompt */}\n                    {responsePrompt && (\n                        <Box sx={{ mt: 4 }}>\n                            <Typography variant=\"body1\" sx={{ fontWeight: \"bold\" }}>Requested Prompt:</Typography>\n                            <Typography variant=\"body2\">{responsePrompt}</Typography>\n                        </Box>\n                    )}\n\n                    {/* Submit Button */}\n                    <Button\n                        variant=\"contained\"\n                        sx={{ backgroundColor: \"#6c5ce7\", mt: 2 }}\n                        onClick={handleSubmit}\n                    >\n                        Submit\n                    </Button>\n                </Paper>\n            )}\n        </div>\n    );\n};\n\nexport default Home;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,aAAa;AACpC,SACIC,MAAM,EACNC,OAAO,EACPC,UAAU,EACVC,QAAQ,EACRC,WAAW,EACXC,UAAU,EACVC,MAAM,EACNC,GAAG,EACHC,SAAS,EACTC,MAAM,EACNC,KAAK,QACF,eAAe;AACtB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,EAAEC,mBAAmB,QAAQ,wBAAwB;AAC1E,OAAOC,SAAS,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,QAAQ,GAAG,4BAA4B;AAE7C,MAAMC,MAAM,GAAGnB,MAAM,CAACQ,GAAG,CAAC,CAAC;EACvBY,MAAM,EAAE,OAAO;EACfC,eAAe,EAAE,OAAON,SAAS,GAAG;EACpCO,cAAc,EAAE,OAAO;EACvBC,kBAAkB,EAAE;AACxB,CAAC,CAAC;AAACC,EAAA,GALGL,MAAM;AAOZ,MAAMM,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC8B,MAAM,EAAEC,SAAS,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACgC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACkC,aAAa,EAAEC,gBAAgB,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACoC,MAAM,EAAEC,SAAS,CAAC,GAAGrC,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACsC,cAAc,EAAEC,iBAAiB,CAAC,GAAGvC,QAAQ,CAAC,EAAE,CAAC;EAExDD,SAAS,CAAC,MAAM;IACZ,MAAMyC,cAAc,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACA,MAAMC,IAAI,GAAG,MAAM3B,YAAY,CAAC,CAAC;QACjCe,YAAY,CAACY,IAAI,CAAC;MACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACrD;IACJ,CAAC;IACDF,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,oBAAoB,GAAG,MAAOC,KAAK,IAAK;IAC1C,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IACnCf,mBAAmB,CAACa,QAAQ,CAAC;IAC7B,IAAI;MACA,MAAMG,UAAU,GAAG,MAAMlC,mBAAmB,CAAC+B,QAAQ,CAAC;MACtDf,SAAS,CAACkB,UAAU,CAAC;MACrBd,gBAAgB,CAAC,EAAE,CAAC;IACxB,CAAC,CAAC,OAAOO,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD;EACJ,CAAC;EAED,MAAMQ,iBAAiB,GAAIL,KAAK,IAAK;IACjCV,gBAAgB,CAACU,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC;EACxC,CAAC;EAED,MAAMG,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,OAAO,GAAG;MACZC,MAAM,EAAErB,gBAAgB;MAAE;MAC1BsB,KAAK,EAAEpB,aAAa;MACpBqB,OAAO,EAAE,uHAAuH;MAChInB,MAAM,EAAEA;IACZ,CAAC;IACD,IAAI;MACA,MAAMoB,QAAQ,GAAG,MAAM3C,KAAK,CAAC4C,IAAI,CAAC,GAAGtC,QAAQ,oBAAoB,EAAEiC,OAAO,CAAC;MAC3Eb,iBAAiB,CAACH,MAAM,CAAC;MACzBO,OAAO,CAACe,GAAG,CAAC,WAAW,EAAEF,QAAQ,CAACf,IAAI,CAAC;IAC3C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD;EACJ,CAAC;EAED,oBACIxB,OAAA;IAAAyC,QAAA,gBAEIzC,OAAA,CAAChB,MAAM;MAAC0D,QAAQ,EAAC,QAAQ;MAACC,EAAE,EAAE;QAAEC,eAAe,EAAE;MAAO,CAAE;MAAAH,QAAA,eACtDzC,OAAA,CAACf,OAAO;QAAAwD,QAAA,eACJzC,OAAA,CAACd,UAAU;UAAC2D,OAAO,EAAC,IAAI;UAACF,EAAE,EAAE;YAAEG,KAAK,EAAE,SAAS;YAAEC,UAAU,EAAE;UAAO,CAAE;UAAAN,QAAA,EAAC;QAEvE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAGTnD,OAAA,CAACE,MAAM;MAAA8C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAGVnD,OAAA,CAACT,GAAG;MACAoD,EAAE,EAAE;QACAS,OAAO,EAAE,MAAM;QACfC,aAAa,EAAE,QAAQ;QACvBC,UAAU,EAAE,QAAQ;QACpBC,cAAc,EAAE,QAAQ;QACxBC,EAAE,EAAE;MACR,CAAE;MAAAf,QAAA,gBAENzC,OAAA,CAACd,UAAU;QAAC2D,OAAO,EAAC,IAAI;QAACY,YAAY;QAACd,EAAE,EAAE;UAACW,UAAU,EAAE,MAAM;UAAEP,UAAU,EAAE,MAAM;UAAEW,UAAU,EAAE,oBAAoB;UAAEC,QAAQ,EAAC,MAAM;UAAEb,KAAK,EAAE;QAAU,CAAE;QAAAL,QAAA,EAAC;MAEtJ;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eACbnD,OAAA,CAACZ,WAAW;QAACuD,EAAE,EAAE;UAAEiB,KAAK,EAAE;QAAI,CAAE;QAAAnB,QAAA,gBAC5BzC,OAAA,CAACX,UAAU;UAACwE,EAAE,EAAC,uBAAuB;UAAApB,QAAA,EAAC;QAAmB;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACvEnD,OAAA,CAACV,MAAM;UACHwE,OAAO,EAAC,uBAAuB;UAC/BhC,KAAK,EAAEhB,gBAAiB;UACxBiD,QAAQ,EAAErC,oBAAqB;UAAAe,QAAA,EAE9B/B,SAAS,CAACsD,GAAG,CAAEpC,QAAQ,iBACpB5B,OAAA,CAACb,QAAQ;YAAgB2C,KAAK,EAAEF,QAAS;YAAAa,QAAA,EACpCb;UAAQ,GADEA,QAAQ;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEb,CACb;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC,EAGLrC,gBAAgB,iBACbd,OAAA,CAACN,KAAK;MAACuE,SAAS,EAAE,CAAE;MAACtB,EAAE,EAAE;QAAEuB,OAAO,EAAE,CAAC;QAAEV,EAAE,EAAE,CAAC;QAAEW,EAAE,EAAE,MAAM;QAAEC,QAAQ,EAAE;MAAI,CAAE;MAAA3B,QAAA,gBAEtEzC,OAAA,CAACd,UAAU;QAAC2D,OAAO,EAAC,IAAI;QAACwB,EAAE,EAAE,CAAE;QAAC1B,EAAE,EAAE;UAAEI,UAAU,EAAE,MAAM;UAAED,KAAK,EAAE;QAAU,CAAE;QAAAL,QAAA,EAAC;MAE9E;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eAGbnD,OAAA,CAACZ,WAAW;QAACkF,SAAS;QAACC,MAAM,EAAC,QAAQ;QAAA9B,QAAA,gBAClCzC,OAAA,CAACX,UAAU;UAACwE,EAAE,EAAC,oBAAoB;UAAApB,QAAA,EAAC;QAAiB;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eAClEnD,OAAA,CAACV,MAAM;UACHwE,OAAO,EAAC,oBAAoB;UAC5BhC,KAAK,EAAEd,aAAc;UACrB+C,QAAQ,EAAE/B,iBAAkB;UAAAS,QAAA,EAE3B7B,MAAM,CAACoD,GAAG,CAAE5B,KAAK,iBACdpC,OAAA,CAACb,QAAQ;YAAa2C,KAAK,EAAEM,KAAM;YAAAK,QAAA,EAAEL;UAAK,GAA3BA,KAAK;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAiC,CACxD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eAGdnD,OAAA,CAACR,SAAS;QACNgF,KAAK,EAAC,gBAAgB;QACtBF,SAAS;QACTC,MAAM,EAAC,QAAQ;QACf1B,OAAO,EAAC,UAAU;QAClBf,KAAK,EAAEZ,MAAO;QACd6C,QAAQ,EAAGU,CAAC,IAAKtD,SAAS,CAACsD,CAAC,CAAC5C,MAAM,CAACC,KAAK;MAAE;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eAEtBnD,OAAA,CAACd,UAAU;QAAC2D,OAAO,EAAC,OAAO;QAACF,EAAE,EAAE;UAAEa,EAAE,EAAE;QAAE,CAAE;QAAAf,QAAA,GAAC,kBACJ,EAACzB,aAAa,IAAI,MAAM;MAAA;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC,EAET/B,cAAc,iBACXpB,OAAA,CAACT,GAAG;QAACoD,EAAE,EAAE;UAAEa,EAAE,EAAE;QAAE,CAAE;QAAAf,QAAA,gBACfzC,OAAA,CAACd,UAAU;UAAC2D,OAAO,EAAC,OAAO;UAACF,EAAE,EAAE;YAAEI,UAAU,EAAE;UAAO,CAAE;UAAAN,QAAA,EAAC;QAAiB;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACtFnD,OAAA,CAACd,UAAU;UAAC2D,OAAO,EAAC,OAAO;UAAAJ,QAAA,EAAErB;QAAc;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD,CACR,eAGDnD,OAAA,CAACP,MAAM;QACHoD,OAAO,EAAC,WAAW;QACnBF,EAAE,EAAE;UAAEC,eAAe,EAAE,SAAS;UAAEY,EAAE,EAAE;QAAE,CAAE;QAC1CkB,OAAO,EAAEzC,YAAa;QAAAQ,QAAA,EACzB;MAED;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACV;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC1C,EAAA,CAtJID,IAAI;AAAAmE,GAAA,GAAJnE,IAAI;AAwJV,eAAeA,IAAI;AAAC,IAAAD,EAAA,EAAAoE,GAAA;AAAAC,YAAA,CAAArE,EAAA;AAAAqE,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}